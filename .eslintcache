[{"E:\\PDB\\React\\apache-drill-fe\\src\\index.js":"1","E:\\PDB\\React\\apache-drill-fe\\src\\reportWebVitals.js":"2","E:\\PDB\\React\\apache-drill-fe\\src\\App.js":"3","E:\\PDB\\React\\apache-drill-fe\\src\\containers\\Home.jsx":"4","E:\\PDB\\React\\apache-drill-fe\\src\\components\\RecoveredStats\\RecoveredStats.jsx":"5","E:\\PDB\\React\\apache-drill-fe\\src\\components\\AccumDeadRecoveredHospitalized\\AccumDeadRecoveredHospitalized.jsx":"6","E:\\PDB\\React\\apache-drill-fe\\src\\components\\DailyCases\\DailyCases.jsx":"7"},{"size":542,"mtime":1608470303404,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":195,"mtime":1608463940356,"results":"11","hashOfConfig":"9"},{"size":8784,"mtime":1608837414835,"results":"12","hashOfConfig":"9"},{"size":15416,"mtime":1608835929987,"results":"13","hashOfConfig":"9"},{"size":7616,"mtime":1608836641487,"results":"14","hashOfConfig":"9"},{"size":5221,"mtime":1608823419070,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"120cth6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"18"},"E:\\PDB\\React\\apache-drill-fe\\src\\index.js",[],["32","33"],"E:\\PDB\\React\\apache-drill-fe\\src\\reportWebVitals.js",[],"E:\\PDB\\React\\apache-drill-fe\\src\\App.js",[],"E:\\PDB\\React\\apache-drill-fe\\src\\containers\\Home.jsx",[],"E:\\PDB\\React\\apache-drill-fe\\src\\components\\RecoveredStats\\RecoveredStats.jsx",[],"E:\\PDB\\React\\apache-drill-fe\\src\\components\\AccumDeadRecoveredHospitalized\\AccumDeadRecoveredHospitalized.jsx",[],"E:\\PDB\\React\\apache-drill-fe\\src\\components\\DailyCases\\DailyCases.jsx",["34","35","36"],"import React, { Component } from \"react\";\r\nimport {Card} from \"react-bootstrap\";\r\nimport {LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer} from 'recharts';\r\n\r\n// Karena pas buka page awal belum ada props buat yang selected, bakal bikin conditional rendering\r\n// Conditional rendering buat kalau belum ada props selected sama udah ada\r\n// Oleh karena itu, dataToShow dipecah jadi 2. Ada dataToShowBoth untuk isi data ketika selected dan indonesia udah ada\r\n// Ada juga dataToShow aja yang cuma isi data indonesia aja\r\nconst dataToShowBoth = (props) => {\r\n\r\n    const list = [];\r\n    props.dailyIndonesia.map((ind) => {\r\n        props.dailySelected.map((scl) => {\r\n            if (ind.Tanggal === scl.Tanggal) {\r\n                if (ind.NewConfirmed === \"\") {\r\n                    list.push({\r\n                        date:ind.Tanggal,\r\n                        indonesia: 0,\r\n                        selected : parseInt(scl.NewConfirmed)\r\n                    })\r\n                } else if (scl.NewConfirmed === \"\") {\r\n                    list.push({\r\n                        date:ind.Tanggal,\r\n                        indonesia: parseInt(ind.NewConfirmed),\r\n                        selected : 0\r\n                    })\r\n                } else if (scl.NewConfirmed === \"\" && ind.NewConfirmed === \"\") {\r\n                    list.push({\r\n                        date:ind.Tanggal,\r\n                        indonesia: 0,\r\n                        selected : 0\r\n                    })\r\n                } else {\r\n                    list.push({\r\n                        date:ind.Tanggal,\r\n                        indonesia: parseInt(ind.NewConfirmed),\r\n                        selected : parseInt(scl.NewConfirmed)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    })\r\n    return list;\r\n}\r\n\r\nconst dataToShow = (props) => {\r\n\r\n    const list = [];\r\n\r\n    props.dailyIndonesia.map((ind) => {\r\n        if (ind.NewConfirmed === \"\") {\r\n            list.push({\r\n                date:ind.Tanggal,\r\n                indonesia: 0,\r\n            })\r\n        } else {\r\n            list.push({\r\n                date:ind.Tanggal,\r\n                indonesia: parseInt(ind.NewConfirmed),\r\n            })\r\n        }\r\n    })\r\n    return list;\r\n}\r\n\r\nclass DailyCases extends Component {\r\n    render() {\r\n        if (this.props.dailySelected === undefined || this.props.dailySelected.length === 0) {\r\n            return (\r\n                <React.Fragment>\r\n                    <div style={{ paddingBottom: \"1rem\"}}>\r\n                        <Card>\r\n                            <Card.Header style={{fontWeight: \"550\", fontSize: \"20px\"}}>Daily Cases</Card.Header>\r\n                            <Card.Body style={{ minHeight: \"100\"}}>\r\n                                <ResponsiveContainer width=\"100%\" height={480}>\r\n                                    <LineChart width={730} height={250} data={dataToShow(this.props)}\r\n                                               margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"date\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Legend />\r\n                                        <Line type=\"monotone\" dataKey=\"indonesia\" name=\"Indonesia's daily case\" stroke=\"#8884d8\" />\r\n                                    </LineChart>\r\n                                </ResponsiveContainer>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <div style={{ paddingBottom: \"1rem\"}}>\r\n                        <Card>\r\n                            <Card.Header style={{fontWeight: \"550\", fontSize: \"20px\"}}>Daily Cases</Card.Header>\r\n                            <Card.Body style={{ minHeight: \"100\"}}>\r\n                                <ResponsiveContainer width=\"100%\" height={480}>\r\n                                    <LineChart data={dataToShowBoth(this.props)}\r\n                                               margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                        <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                        <XAxis dataKey=\"date\" />\r\n                                        <YAxis />\r\n                                        <Tooltip />\r\n                                        <Legend />\r\n                                        <Line type=\"monotone\" dataKey=\"indonesia\" name=\"Indonesia\" stroke=\"#8884d8\" />\r\n                                        <Line type=\"monotone\" dataKey=\"selected\" name={this.props.selectedName} stroke=\"#82ca9d\" />\r\n                                    </LineChart>\r\n                                </ResponsiveContainer>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default DailyCases;",{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","severity":1,"message":"42","line":12,"column":36,"nodeType":"43","messageId":"44","endLine":12,"endColumn":38},{"ruleId":"41","severity":1,"message":"42","line":13,"column":39,"nodeType":"43","messageId":"44","endLine":13,"endColumn":41},{"ruleId":"41","severity":1,"message":"42","line":50,"column":36,"nodeType":"43","messageId":"44","endLine":50,"endColumn":38},"no-native-reassign",["45"],"no-negated-in-lhs",["46"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]