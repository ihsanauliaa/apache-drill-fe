[{"E:\\PDB\\React\\apache-drill-fe\\src\\index.js":"1","E:\\PDB\\React\\apache-drill-fe\\src\\reportWebVitals.js":"2","E:\\PDB\\React\\apache-drill-fe\\src\\App.js":"3","E:\\PDB\\React\\apache-drill-fe\\src\\containers\\Home.jsx":"4","E:\\PDB\\React\\apache-drill-fe\\src\\components\\RecoveredStats\\RecoveredStats.jsx":"5","E:\\PDB\\React\\apache-drill-fe\\src\\components\\AccumDeadRecoveredHospitalized\\AccumDeadRecoveredHospitalized.jsx":"6","E:\\PDB\\React\\apache-drill-fe\\src\\components\\DailyCases\\DailyCases.jsx":"7"},{"size":542,"mtime":1608470303404,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":195,"mtime":1608463940356,"results":"11","hashOfConfig":"9"},{"size":7490,"mtime":1608560577814,"results":"12","hashOfConfig":"9"},{"size":9825,"mtime":1608533152238,"results":"13","hashOfConfig":"9"},{"size":3636,"mtime":1608559006433,"results":"14","hashOfConfig":"9"},{"size":2535,"mtime":1608555915176,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"120cth6",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"18"},"E:\\PDB\\React\\apache-drill-fe\\src\\index.js",[],["35","36"],"E:\\PDB\\React\\apache-drill-fe\\src\\reportWebVitals.js",[],"E:\\PDB\\React\\apache-drill-fe\\src\\App.js",[],"E:\\PDB\\React\\apache-drill-fe\\src\\containers\\Home.jsx",[],"E:\\PDB\\React\\apache-drill-fe\\src\\components\\RecoveredStats\\RecoveredStats.jsx",["37"],"import React, { Component } from \"react\";\r\nimport styles from './RecoveredStats.module.css'\r\nimport {Card, Container, Row, Col} from \"react-bootstrap\";\r\nimport {Pie, PieChart, ResponsiveContainer, Cell, Label, Tooltip} from \"recharts\";\r\nconst COLORS = ['#FFEACC', '#FECF28']\r\n\r\nfunction CustomLabel({viewBox, value1}){\r\n    const {cx, cy} = viewBox;\r\n    return (\r\n        <text x={cx} y={cy} fill=\"#3d405c\" className=\"recharts-text recharts-label\" textAnchor=\"middle\" dominantBaseline=\"central\">\r\n            <tspan fontSize=\"16\">{value1}</tspan>\r\n        </text>\r\n    )\r\n}\r\n\r\nconst fillData = (confirmed, recovered) => {\r\n    const data = [];\r\n    data.push({name: 'Non-Recovered', value: confirmed - recovered}, {name: 'Recovered', value: recovered})\r\n    return data\r\n}\r\n\r\nclass RecoveredStats extends Component {\r\n    calculatePercentageIndonesia() {\r\n        let percentageIndonesia;\r\n        percentageIndonesia = (this.props.indonesiaRecovered / this.props.indonesiaConfirmed * 100).toFixed(2)\r\n        let percentageIndonesiaString;\r\n        percentageIndonesiaString = percentageIndonesia + \"%\"\r\n        return percentageIndonesiaString;\r\n    }\r\n    calculatePercentageSelected() {\r\n        let percentageSelected;\r\n        percentageSelected = (this.props.selectedRecovered / this.props.selectedConfirmed * 100).toFixed(2)\r\n        let percentageSelectedString;\r\n        percentageSelectedString = percentageSelected + \"%\"\r\n        return percentageSelectedString;\r\n    }\r\n    render() {\r\n        // console.log(this.state.data)\r\n        // console.log(this.calculatePercentageIndonesia())\r\n        // console.log(this.calculatePercentageSelected())\r\n        // console.log(this.props.indonesiaCode)\r\n        // console.log(this.props.selectedCode)\r\n        // console.log(fillData(this.props.indonesiaConfirmed, this.props.indonesiaRecovered))\r\n        // console.log(this.props.indonesiaConfirmed)\r\n        // console.log(this.props.selectedConfirmed)\r\n        // console.log(this.props.indonesiaRecovered)\r\n        // console.log(this.props.selectedRecovered)\r\n        // console.log(this.props.selectedName === \"\")\r\n        if (this.props.selectedName === \"\") {\r\n            return (\r\n                <React.Fragment>\r\n                    <div style={{ paddingBottom: \"1rem\"}}>\r\n                        <Card>\r\n                            <Card.Header>Recovered</Card.Header>\r\n                            <Card.Body>\r\n                                <Container fluid>\r\n                                    <Row>\r\n                                        <Col style={{minHeight: \"100\"}}>\r\n                                            <ResponsiveContainer width=\"100%\" height={220}>\r\n                                                <PieChart onMouseEnter={this.onPieEnter}>\r\n                                                    <Pie\r\n                                                        data={fillData(this.props.indonesiaConfirmed, this.props.indonesiaRecovered)}\r\n                                                        innerRadius={65}\r\n                                                        outerRadius={80}\r\n                                                        fill=\"#8884D8\"\r\n                                                        paddingAngle={5}\r\n                                                        dataKey=\"value\"\r\n                                                    >\r\n                                                        {\r\n                                                            fillData(this.props.indonesiaConfirmed, this.props.indonesiaRecovered).map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                                                        }\r\n                                                        <Label content={<CustomLabel value1={this.calculatePercentageIndonesia()}/>} position=\"center\" />\r\n                                                    </Pie>\r\n                                                    <Tooltip/>\r\n                                                </PieChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <br/>\r\n                                            <h3>{this.props.indonesiaName}</h3>\r\n                                            <h5>Cumulative Recovered: {this.props.indonesiaRecovered}</h5>\r\n                                            <h5>Cumulative Cases: {this.props.indonesiaConfirmed}</h5>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </React.Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <React.Fragment>\r\n                    <div style={{ paddingBottom: \"1rem\"}}>\r\n                        <Card>\r\n                            <Card.Header>Recovered</Card.Header>\r\n                            <Card.Body>\r\n                                <Container fluid>\r\n                                    <Row>\r\n                                        <Col style={{minHeight: \"100\"}}>\r\n                                            <ResponsiveContainer width=\"100%\" height={220}>\r\n                                                <PieChart onMouseEnter={this.onPieEnter}>\r\n                                                    <Pie\r\n                                                        data={fillData(this.props.indonesiaConfirmed, this.props.indonesiaRecovered)}\r\n                                                        innerRadius={65}\r\n                                                        outerRadius={80}\r\n                                                        fill=\"#8884D8\"\r\n                                                        paddingAngle={5}\r\n                                                        dataKey=\"value\"\r\n                                                    >\r\n                                                        {\r\n                                                            fillData(this.props.indonesiaConfirmed, this.props.indonesiaRecovered).map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                                                        }\r\n                                                        <Label content={<CustomLabel value1={this.calculatePercentageIndonesia()}/>} position=\"center\" />\r\n                                                    </Pie>\r\n                                                    <Tooltip/>\r\n                                                </PieChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <br/>\r\n                                            <h3>Indonesia</h3>\r\n                                            <h5>Cumulative Recovered: {this.props.indonesiaRecovered}</h5>\r\n                                            <h5>Cumulative Cases: {this.props.indonesiaConfirmed}</h5>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <Col style={{minHeight: \"100\"}}>\r\n                                            <ResponsiveContainer width=\"100%\" height={220}>\r\n                                                <PieChart onMouseEnter={this.onPieEnter}>\r\n                                                    <Pie\r\n                                                        data={fillData(this.props.selectedConfirmed, this.props.selectedRecovered)}\r\n                                                        innerRadius={65}\r\n                                                        outerRadius={80}\r\n                                                        fill=\"#8884D8\"\r\n                                                        paddingAngle={5}\r\n                                                        dataKey=\"value\"\r\n                                                    >\r\n                                                        {\r\n                                                            fillData(this.props.indonesiaConfirmed, this.props.indonesiaRecovered).map((entry, index) => <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />)\r\n                                                        }\r\n                                                        <Label content={<CustomLabel value1={this.calculatePercentageSelected()}/>} position=\"center\" />\r\n                                                    </Pie>\r\n                                                    <Tooltip/>\r\n                                                </PieChart>\r\n                                            </ResponsiveContainer>\r\n                                        </Col>\r\n                                        <Col>\r\n                                            <br/>\r\n                                            <h3>{this.props.selectedName}</h3>\r\n                                            <h5>Cumulative Recovered: {this.props.selectedRecovered}</h5>\r\n                                            <h5>Cumulative Cases: {this.props.selectedConfirmed}</h5>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Container>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </div>\r\n                </React.Fragment>\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nexport default RecoveredStats;","E:\\PDB\\React\\apache-drill-fe\\src\\components\\AccumDeadRecoveredHospitalized\\AccumDeadRecoveredHospitalized.jsx",["38","39"],"import React, { Component } from \"react\";\r\nimport styles from './AccumDeadRecoveredHospitalized.module.css'\r\nimport {Card} from \"react-bootstrap\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\n  \r\nfunction createData(komponen, valId, valSlc) {\r\n    return { komponen, valId, valSlc };\r\n}\r\n\r\nconst rows = (props) => {\r\n    // console.log(\">>>rows<<<\");\r\n    // console.log(props);\r\n    // console.log(props.allDataIndonesia.length)\r\n    // console.log(props.allDataSelected.length)\r\n    if (props.allDataIndonesia.length === 1 && props.allDataSelected.length === 1) {\r\n        const data = [\r\n            createData('Dead', props.allDataIndonesia[0].TotalDeaths, props.allDataSelected[0].TotalDeaths),\r\n            createData('Recovered', props.allDataIndonesia[0].TotalRecovered, props.allDataSelected[0].TotalRecovered),\r\n            createData('Hospitalized', props.allDataIndonesia[0].TotalHospitalised, props.allDataSelected[0].TotalHospitalised)\r\n        ];\r\n        return data;\r\n    }\r\n}\r\n\r\nclass AccumDeadRecoveredHospitalized extends Component {\r\n    // constructor(props)\r\n    // {\r\n    //     super(props);\r\n    //     this.state = { data : rows(this.props)};\r\n    // }\r\n    state = {\r\n        data: rows(this.props)\r\n    }\r\n    render() {\r\n        // console.log(\"data tabel <<<<<\")\r\n        // console.log(rows(this.props))\r\n        // console.log(\"<<< props <<<\")\r\n        // console.log(rows(this.props))\r\n        // console.log(this.props)\r\n        console.log(this.state.data)\r\n        return (\r\n            <React.Fragment>\r\n                <Card>\r\n                    <Card.Header>Other Stats</Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Text>\r\n                            <TableContainer component={Paper}>\r\n                                <Table aria-label=\"simple table\">\r\n                                    <TableHead>\r\n                                    <TableRow>\r\n                                        <TableCell/>\r\n                                        <TableCell align=\"right\">Indonesia</TableCell>\r\n                                        <TableCell align=\"right\">Selected</TableCell>\r\n                                    </TableRow>\r\n                                    </TableHead>\r\n                                    <TableBody>\r\n                                    {this.state.data.map((data) => (\r\n                                        <TableRow key={data.komponen}>\r\n                                        <TableCell component=\"th\" scope=\"row\">\r\n                                            {data.komponen}\r\n                                        </TableCell>\r\n                                        <TableCell align=\"right\">{data.valId}</TableCell>\r\n                                        <TableCell align=\"right\">{data.valSlc}</TableCell>\r\n                                        </TableRow>\r\n                                    ))}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </TableContainer>\r\n                        </Card.Text>\r\n                    </Card.Body>\r\n                </Card>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AccumDeadRecoveredHospitalized;",["40","41"],"E:\\PDB\\React\\apache-drill-fe\\src\\components\\DailyCases\\DailyCases.jsx",["42","43","44","45","46","47"],"import React, { Component } from \"react\";\r\nimport styles from './DailyCases.module.css'\r\nimport {Card} from \"react-bootstrap\";\r\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, Legend} from 'recharts';\r\n// import moment from \"moment\";\r\n\r\nconst dataToShow = (props) =>{\r\n\r\n    var list = []\r\n    if (props.dailyIndonesia == undefined || props.dailySelected == undefined) {\r\n        return \"data is not ready\"\r\n    }\r\n    props.dailyIndonesia.map((ind) => {\r\n        props.dailySelected.map((scl)=>{\r\n            if (ind.date == scl.date){\r\n                list.push({\r\n                    // name: moment(obj.date).format(\"DD-MM-YYYY\"),\r\n                    date:ind.date,\r\n                    indonesia: ind.NewConfirmed.value,\r\n                    selected : scl.NewConfirmed.value\r\n                })\r\n            }\r\n        })\r\n    })\r\n    // console.log(\"After mapping\");\r\n    // console.log(list);\r\n    return list;\r\n}\r\nconst selectedName = \"Selected's total case\";\r\nclass DailyCases extends Component {\r\n    render() {\r\n        // console.log(\"this is daily\")\r\n        // console.log(this.props.indonesiaCode)\r\n        // console.log(this.props.selectedCode)\r\n        // console.log(this.props.dailyIndonesia)\r\n        // console.log(this.props.dailySelected)\r\n        return (\r\n            <React.Fragment>\r\n                <div style={{ paddingBottom: \"1rem\"}}>\r\n                    <Card>\r\n                        <Card.Header>Daily Cases</Card.Header>\r\n                        <Card.Body>\r\n                            <Card.Text>\r\n                                <LineChart width={730} height={250} data={dataToShow(this.props)}\r\n                                    margin={{ top: 5, right: 30, left: 20, bottom: 5 }}>\r\n                                    <CartesianGrid strokeDasharray=\"3 3\" />\r\n                                    <XAxis dataKey=\"date\" />\r\n                                    <YAxis />\r\n                                    <Tooltip />\r\n                                    <Legend />\r\n                                    <Line type=\"monotone\" dataKey=\"indonesia\" name=\"Indonesia's total case\" stroke=\"#8884d8\" />\r\n                                    <Line type=\"monotone\" dataKey=\"selected\" name={selectedName} stroke=\"#82ca9d\" />\r\n                                </LineChart>\r\n                            </Card.Text>\r\n                        </Card.Body>\r\n                    </Card>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DailyCases;",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"52","severity":1,"message":"56","line":4,"column":10,"nodeType":"54","messageId":"55","endLine":4,"endColumn":20},{"ruleId":"48","replacedBy":"57"},{"ruleId":"50","replacedBy":"58"},{"ruleId":"52","severity":1,"message":"53","line":2,"column":8,"nodeType":"54","messageId":"55","endLine":2,"endColumn":14},{"ruleId":"59","severity":1,"message":"60","line":10,"column":30,"nodeType":"61","messageId":"62","endLine":10,"endColumn":32},{"ruleId":"59","severity":1,"message":"60","line":10,"column":66,"nodeType":"61","messageId":"62","endLine":10,"endColumn":68},{"ruleId":"63","severity":1,"message":"64","line":13,"column":36,"nodeType":"65","messageId":"66","endLine":13,"endColumn":38},{"ruleId":"63","severity":1,"message":"64","line":14,"column":38,"nodeType":"65","messageId":"66","endLine":14,"endColumn":40},{"ruleId":"59","severity":1,"message":"60","line":15,"column":26,"nodeType":"61","messageId":"62","endLine":15,"endColumn":28},"no-native-reassign",["67"],"no-negated-in-lhs",["68"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'makeStyles' is defined but never used.",["67"],["68"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]